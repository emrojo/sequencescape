Sequencescape::Application.routes.draw do
  resources :reference_genomes
  resources :barcode_printers

  resources :robot_verifications, :collection => {:submission => [:post, :get], :download => [:post]}
  resources :projects, :has_many => :studies, :member => { :related_studies => :get, :collaborators => :get, :follow => :get, :grant_role => :post, :remove_role => :post  } do |project|
    project.resources :billing_events, :controller => "projects/billing_events", :only => [:index, :show, :new, :create]
  end

  #### NPG start ####
  with_options(:path_prefix => '/npg_actions', :conditions => { :method => :post, :format => :xml }) do |npg|
    npg.with_options(:controller => 'npg_actions/assets') do |assets|
      assets.pass_qc_state 'assets/:id/pass_qc_state', :action => 'pass'
      assets.fail_qc_state 'assets/:id/fail_qc_state', :action => 'fail'
    end
  end
  #### NPG end ####

  resources :items
  resources :batches, :member => {:print_labels => :get, :print_stock_labels => :get, :print_plate_labels => :get, :filtered => :get, :swap => :post, :gwl_file => :get} do |batch|
    batch.resources :requests, :controller => "batches/requests"
    batch.resources :comments, :controller => "batches/comments"
  end

  release_batch 'pipelines/release/:id', :action => 'release', :controller =>'pipelines'
  finish_batch 'pipelines/finish/:id', :action => 'finish', :controller =>'pipelines'
  connect "run/:run", :controller => "items", :action => "run_lanes"
  connect "run/:run.json", :controller => "items", :action => "run_lanes", :format => "json"
  connect "run/:run.xml", :controller => "items", :action => "run_lanes", :format => "xml"
  login "/login", :controller => "sessions", :action => "login"
  logout "/logout", :controller => "sessions", :action => "logout"

  # Main objects
  resources :events
  resources :sources
  resources :samples, :has_many => :assets, :member => {:history => :get }
  resources :samples, :collection => { :upload => :get, :review => :post } do |sample|
    sample.resources :comments, :controller => "samples/comments"
    sample.resources :studies, :controller => "samples/studies"
  end

  connect '/taxon_lookup_by_term/:term', :controller => "samples", :action => "taxon_lookup"
  connect '/taxon_lookup_by_id/:id', :controller => "samples", :action => "taxon_lookup"

  connect '/studies/:study_id/workflows/:workflow_id/summary_detailed/:id', :controller => "studies/workflows", :action => "summary_detailed"
  connect 'studies/accession/:id', :controller =>"studies", :action =>"accession"
  connect 'studies/policy_accession/:id', :controller =>"studies", :action =>"policy_accession"
  connect 'studies/dac_accession/:id', :controller =>"studies", :action =>"dac_accession"
  study_show_accession 'studies/accession/show/:id', :controller =>"studies", :action =>"show_accession"
  study_show_dac_accession 'studies/accession/dac/show/:id', :controller =>"studies", :action =>"show_dac_accession"
  study_show_policy_accession 'studies/accession/policy/show/:id', :controller =>"studies", :action =>"show_policy_accession"
  #connect 'studies/accession/submission/:id', :controller =>"studies", :action =>"show_submission" doesn't exist anymore
  connect 'samples/accession/:id', :controller =>"samples", :action =>"accession"
  connect 'samples/accession/show/:id', :controller =>"samples", :action =>"show_accession"
  destroy_sample 'samples/destroy/:id', :controller => "samples", :action => "destroy"
  sample_show_accession 'samples/accession/show/:id', :controller =>"samples", :action =>"show_accession"

  connect '/taxon_lookup_by_term/:term', :controller => "samples", :action => "taxon_lookup"
  connect '/taxon_lookup_by_id/:id', :controller => "samples", :action => "taxon_lookup"

  resources :studies, :has_many => :assets, :collection => {:study_list => :get},
    :member => { :study_reports => [:get], :sample_manifests => :get, :suppliers => :get, :assembly => [:put, :get], :new_plate_submission => :get, :create_plate_submission => :post, :close => :get, :open => :get, :follow => :get, :projects => :get, :study_status => :get, :collaborators => :get, :properties => :get, :state => :get, :grant_role => :post, :remove_role => :post , :related_studies => :get, :relate_study => :post, :unrelate_study => :post} do |study|
    study.resources :sample_registration, :controller => "studies/sample_registration",
      :only => [:index, :new, :create], :collection => {:new => [:get, :post], :upload => :get}
    study.resources :samples, :controller => "studies/samples"
    study.resources :events, :controller => "studies/events"

    study.resources :requests, :member => { :reset => :post, :cancel => :get }
    study.resources :comments, :controller => "studies/comments"

    study.resources :asset_groups, :controller => "studies/asset_groups", :member => {:search => :post, :add => :post, :print => :get, :print_labels => :post, :printing => :get}

    study.resources :plates, :controller => "studies/plates", :except => [:destroy], :collection => {:view_wells => :post, :asset_group => :post, :show_asset_group => :get}, :member => {:remove_wells => :post} do |plate|
      plate.resources :wells, :except => [:destroy, :edit], :controller => "studies/plates/wells"
    end

    study.resources :workflows, :controller => "studies/workflows", :member => { :summary => :get, :show_summary => :get} do |workflow|
      workflow.resources :assets, :collection => { :print => :post }
    end

    study.resources :documents, :controller => "studies/documents", :only => [:show, :destroy]

  end

  # TODO (jr16) move to a more appropriate location
  connect "bulk_submissions", :controller => "bulk_submissions", :action => "new"

  resources :submissions, :collection => { :study_assets => :get, :order_fields => :get, :project_details => :get }
  resources :orders, :only => [:destroy]

  resources :documents, :only => [ :show ]


  #Same path but two different actions. GET for put parameter in the form and show the error. PUT for the action.
  filter_change_decision_request 'requests/:id/change_decision', :controller => 'requests', :action => 'filter_change_decision', :conditions => { :method => :get }
  change_decision_request        'requests/:id/change_decision', :controller => 'requests', :action => 'change_decision',        :conditions => { :method => :put }

  #Same path but two different actions. GET for put parameter in the form and show the error. PUT for the action.
  filter_change_name_rename      'renames/:id/change_name', :controller => 'renames', :action => 'filter_change_name', :conditions => { :method => :get }
  change_name_rename             'renames/:id/change_name', :controller => 'renames', :action => 'change_name',        :conditions => { :method => :put }


  resources :requests,
                :has_many => :batches,
                :member => { :copy => :get, :cancel => :get, :print => :get, :history => :get },
                :collection => { :incomplete_requests_for_family => :get, :pending => :get, :get_children_requests => :get, :mpx_requests_details => :get} do |request|
    request.resources :comments, :controller => "requests/comments"
  end

  resources :items, :only => :none, :shallow => true do |item|
    item.resource :request, :only => [:new, :create]
  end

  study_workflow_status "studies/:study_id/workflows/:id", :controller => "study_workflows", :action => "show"

  resources :searches, :only => [:index]

  # Administrative things
  admin "admin", :controller => "admin", :action => "index"
  resources :custom_texts,     :controller => "admin/custom_texts",     :path_prefix => "/admin"
  resources :settings,         :controller => "admin/settings",         :path_prefix => "/admin", :collection => { :reset => :get, :apply => :get }
  resources :studies,          :controller => "admin/studies",          :path_prefix => "/admin", :member => { :managed_update => :put }, :collection => {:index => :get, :filer => :post}
  resources :projects,         :controller => "admin/projects",         :path_prefix => "/admin", :member => { :managed_update => :put }, :collection => {:index => :get, :filer => :post}
  resources :plate_purposes,   :controller => "admin/plate_purposes",   :path_prefix => "/admin", :only => [:index,:edit,:new,:create,:update]
  resources :delayed_jobs,     :controller => "admin/delayed_jobs",     :path_prefix => "/admin", :only => [:index]
  resources :faculty_sponsors, :controller => "admin/faculty_sponsors", :path_prefix => "/admin"
  resources :delayed_jobs,     :controller => "admin/delayed_jobs",     :path_prefix => "/admin", :only => [:index]
  resources :users,            :controller => "admin/users",            :path_prefix => "/admin",
    :collection => { :filter => :post }, :member => { :switch => :get, :grant_user_role => :post, :remove_user_role => :post }
  resources :profile,          :controller => "users",:member => {:study_reports => :get, :projects => :get }, :only => [:show, :edit, :update, :projects]
  resources :roles, :path_prefix => "/admin", :shallow => true do |role|
    role.resources :users, :controller => "roles/users"
  end
  resources :robots, :controller => "admin/robots", :path_prefix => "/admin", :has_many => :robot_properties
  resources :bait_libraries, :controller => "admin/bait_libraries", :path_prefix => "/admin"
  resources :bait_library_types, :controller => "admin/bait_libraries/bait_library_types", :path_prefix => "/admin"
  resources :bait_library_suppliers, :controller => "admin/bait_libraries/bait_library_suppliers", :path_prefix => "/admin"

  ## From pipelines


  resources :verifications, :collection => {:input => :get, :verify => :post }
  resources :plate_templates

  connect 'implements/print_labels', :controller => 'implements', :action => 'print_labels'
  resources :implements
  resources :pico_sets, :member => { :analyze => :get, :score => :post, :normalise_plate => :get}, :collection => { :create_from_stock => :get }
  resources :gels, :member => { :show => :get, :update => :post}, :collection => { :lookup => :post, :find => :get }

  resources :locations

  resources :request_information_types

  logout "/logout", :controller => "sessions", :action => "logout"
  login "/login", :controller => "sessions", :action => "login"

  # TODO: Decide if this route and the associated controller are actually required (used by library prep pipeline)
  connect 'pipelines/assets/new/:id', :controller => 'pipelines/assets', :action => 'new', :conditions => { :method => :get }

  resources :pipelines, :member => { :reception => :get, :show_comments => :get}, :collection => { :update_priority => :post }, :except => [ :edit, :update, :create, :new ]

  resource :search, :controller => 'search', :only => [:new, :index]

  resources :errors

  resources :events

  connect 'batches/all', :controller => 'batches', :action => 'all'
  connect 'batches/released', :controller => 'batches', :action => 'released'
  connect 'batches/released/clusters', :controller => 'batches', :action => 'released'


  resources :items, :collection => { :samples_for_autocomplete => :get }

  connect 'workflows/refresh_sample_list', :controller => 'workflows', :action => 'refresh_sample_list'

  resources :workflows

  resources :tasks
  resources :asset_audits

  connect 'assets/snp_import', :controller => 'assets', :action => 'snp_import'
  assets_lookup 'assets/lookup', :controller => 'assets', :action => 'lookup'
  connect 'assets/receive_barcode', :controller => 'assets', :action => 'receive_barcode'
  connect 'assets/import_from_snp', :controller => 'assets', :action => 'import_from_snp'
  connect 'assets/confirm_reception', :controller => 'assets', :action => 'confirm_reception'
  connect 'assets/combine', :controller => 'assets', :action => 'combine'
  connect 'assets/get_plate_layout', :controller => 'assets', :action => 'get_plate_layout'
  connect 'assets/create_plate_layout', :controller => 'assets', :action => 'create_plate_layout'
  connect 'assets/make_plate_from_rack', :controller => 'assets', :action => 'make_plate_from_rack'

  controller 'assets/find_by_barcode', :controller => 'assets', :action => 'find_by_barcode'

  lab_view "lab_view", :controller => 'assets', :action => 'lab_view'

  resources :families
  resources :tag_groups, :except => [:destroy] do |tag|
    tag.resources :tags, :except => [:destroy, :index, :create, :new, :edit]
  end



  resources :assets, :has_many => :assets, :collection => { :snp_register => :get, :reception => :get, :print_labels => :post}, :member => { :parent_assets => :get, :child_assets => :get, :show_plate => :get, :new_request => :get, :create_request => :post, :summary => :get, :close => :get, :print => :get, :print_items => :post, :history => :get, :filtered_move => :get, :move => :post, :move_to_2D => :get,  :complete_move_to_2D => :post} do |asset|
    asset.resources :comments, :controller => "assets/comments"
  end

  resources :plates, :collection => { :upload_pico_results => :post, :create => :post, :to_sample_tubes => :get, :create_sample_tubes => :post }


  resources :pico_set_results, :collection => {:upload_pico_results => :post, :create => :post}

  resources :receptions, :collection => { :snp_register => :get, :reception => :get, :snp_import => :get, :receive_snp_barcode => :get}

  with_options(:controller => 'sequenom') do |sequenom|
    sequenom.sequenom_root 'sequenom/index', :action => 'index', :conditions => { :method => :get }
    sequenom.sequenom_search 'sequenom/search', :action => 'search', :conditions => { :method => :post }
    sequenom.sequenom_plate 'sequenom/:id', :action => 'show', :conditions => { :method => :get }, :requirements => { :id => /\d+/ }
    sequenom.sequenom_update 'sequenom/:id', :action => 'update', :conditions => { :method => :put }, :requirements => { :id => /\d+/ }
    sequenom.sequenom_quick_update 'sequenom/quick', :action => 'quick_update', :conditions => { :method => :post }
  end

  resources :sequenom_qc_plates, :only => [ :new, :create, :index]

  resources :pico_dilutions

  resources :study_reports
  resources :sample_logistics, :collection => { :lab => :get, :qc_overview => :get }

  ### Pulldown ###
  with_options(:namespace => "pulldown/", :path_prefix => "/pulldown") do |pulldown|
    pulldown.resources :plates, :collection => { :lookup_plate_purposes => :get }
    pulldown.resources :validates, :collection => { :source_plate_type => :get, :target_plate_type => :get, :validate_plates => :post }
  end




  ### Standard routes
  # You can have the root of your site routed with root -- just remember to delete public/index.html.
  root :controller => "studies"

  ######  API  #####
  with_options(:path_prefix => "/#{API_VERSION}") do |api|
    # Some of our resources are read-only (default behaviour but this just makes it clearer) ...
    api.with_options(:read_only => true) do |read_only|
      read_only.model :asset_audits, :controller => "api/asset_audits"
      read_only.model :asset_links, :controller => "api/asset_links"
      read_only.model :batch_requests, :controller => "api/batch_requests"
      read_only.asset :batches, :controller => "api/batches"
      read_only.model :billing_events, :controller => "api/billing_events"
      read_only.model :events, :controller => "api/events"
      read_only.asset :lanes, :controller => "api/lanes"
      read_only.asset :library_tubes, :controller => "api/library_tubes" do |library_tube|
        library_tube.asset :lanes, :controller => "api/lanes"
        library_tube.model :requests, :controller => "api/requests"
      end
      read_only.asset :multiplexed_library_tubes, :controller => "api/multiplexed_library_tubes"
      read_only.asset :pulldown_multiplexed_library_tubes, :controller => "api/pulldown_multiplexed_library_tubes"
      read_only.model :plate_purposes, :controller => "api/plate_purposes"
      read_only.asset :plates, :controller => "api/plates"
      read_only.asset :sample_tubes, :controller => "api/sample_tubes" do |sample_tube|
        sample_tube.asset :library_tubes, :controller => "api/library_tubes"
        sample_tube.model :requests, :controller => "api/requests"
      end
      read_only.model :study_samples, :controller => "api/study_samples"
      read_only.model :submissions, :controller => "api/submissions" do |submission|
        submission.model :orders, :controller => "api/orders"
      end
      read_only.model :orders, :controller => "api/orders"
      read_only.model :tags, :controller => "api/tags"
      read_only.asset :wells, :controller => "api/wells"
      read_only.model :aliquots, :controller => "api/aliquots"
    end

    # ... others are CRUD resources ...
    api.with_options(:read_only => false) do |crud|
      crud.model :projects, :controller => "api/projects" do |project|
        project.model :studies, :controller => "api/studies"
      end
      crud.model :requests, :controller => "api/requests"
      crud.model :samples, :controller => "api/samples" do |smp|
        smp.asset :sample_tubes, :controller => "api/sample_tubes", :read_only => true
      end
      crud.model :studies, :controller => "api/studies" do |study|
        study.model :samples, :controller => "api/samples"
        study.model :projects, :controller => "api/projects"
      end
    end

    # ... and some are specialised (but should not be!)

  end
  #### API end ####

  ### SDB ###
  with_options(:namespace => "sdb/", :path_prefix => "/sdb") do |sdb|
    sdb.resources :sample_manifests, :collection => {:upload => :post} ,:member => {:export => :get, :uploaded_spreadsheet => :get}
    #/:relative_root/:class/:attachment/:id?style=:style
    sdb.resources :suppliers, :member => {:sample_manifests => :get, :studies => :get}
    sdb.connect "/", :controller => "home"
  end


  # Install the default routes as the lowest priority.
  connect ":controller/:action/:id"
  connect ":controller/:action/:id.:format"
end
